package jmjrst.main;

import static org.junit.Assert.*;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;
import javax.imageio.metadata.IIOMetadata;
import javax.imageio.stream.ImageInputStream;

import org.jis.generator.Generator;
import org.junit.Before;
import org.junit.Test;

public class RotateImageTest {
	
	private Generator generatortest = new Generator(null , 0);
	private BufferedImage i;
	
	@Before
	public void setUp() {
		File file = new File("src/test/resources/picture.jpg");
		i = null;
	    IIOMetadata imeta = null;
		
		try
	    {
	      ImageInputStream iis = ImageIO.createImageInputStream(file);
	      ImageReader reader = ImageIO.getImageReadersByFormatName("jpg").next();
	      reader.setInput(iis, true);
	      ImageReadParam params = reader.getDefaultReadParam();
	      i = reader.read(0, params);
	      imeta = reader.getImageMetadata(0);
	    }
	    catch (IOException e)
	    {
	      System.err.println("Error while reading File: " + file.getAbsolutePath());
	      e.printStackTrace();
	      return;
	    }
	}

	@Test
	public void test() {
		assertEquals(123456, 123456);
	}
	
	@Test
	public void testrotateImage() {
		assertEquals(i, generatortest.rotateImage(i, 0.0));
		assertEquals(null, generatortest.rotateImage(null, 0.0));
	}
	
	@Test(expected = IllegalArgumentException.class) 
	public void testrotateImage2() { 
	     generatortest.rotateImage(i, 0.7);
	}
	
	@Test
	public void testrotating() {
		BufferedImage image = i;
		generatortest.rotateImage(i, Generator.ROTATE_90);
		int w1 = i.getWidth(null);
		int w2 = image.getWidth(null);
		int h1 = i.getHeight(null);
		int h2 = image.getHeight(null);
		assertEquals(i.getWidth(null), image.getHeight(null));
		assertEquals(h1, h2);
		assertEquals(w1, w2);
	//	assertEquals(i.getHeight(null), image.getWidth(null));
	//	generatortest.rotateImage(i, Generator.ROTATE_270);
	//	assertEquals(i, image);
	}
	
	

}
